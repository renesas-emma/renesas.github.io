---
layout: post
title:  "IVI product design guide"
date:   2017-07-26 17:33:17 +0800
categories: IT
---
# 性能和稳定性

## 快速启动
 下面列出了一些快速启动优化的建议:
1. 硬件设计和MCU软件设计中，尽量缩短ACC/Unlock后给SoC上电的延迟时
   Unlock信号在CAN总线上发出，一般都由MCU接受，Unlock信号接受后无需延迟，可以直接开始给SoC上电流程
   ACC信号可能需要防抖处理，建议防抖处理的时间为15ms； 如果ACC信号在车辆电路上直接连接到手动开关或者钥匙孔，则需要防抖处理。如果ACC信号是由车辆ECU发出的，因为ECU本身已经进行了防抖处理，就不需要再次进行防抖处理。
2. 硬件设计中尽可能减少SOC上电的稳定时间
   在使能主DC-DC电源后，需要根据DC-DC的特性和电路上的负载情况，进行一段时间的电源稳定时间。电源稳定时间过后才拉高SoC的复位信号。系统上电时负载越小，电源稳定时间越短。在系统设计时可以考虑主要的耗电部分设计为上电时不自动接通电源的模式，可以减小上电稳定时间。在系统中的电源滤波电容大小也影响上电稳定时间，但是电源滤波电容有其他方面的考虑，所以需要平衡电容的大小。
3. 硬件设计中需要尽可能优化Flash的读取速度
   在硬件设计中要保证Flash存储器可以运行到最高速状态，其中包括时钟频率和运行模式两方面。有些SoC因为PLL的限制无法任意切换Flash的时钟频率，因此在设计时需要认真阅读相关文档。 对于eMMC， HS200和HS400模式需要电源部分支持3.3V和1.8V切换，因此在硬件设计时需要注意
4. boot loader尽可能早的启动高速读取模式
5. 为了支持快速启动，Boot loader要移除所有的开发工具，比如hdcp, tftp, fastboot,内存测试工具等
    可以通过
6. kernel镜像不应压缩，以缩短解压所需的时间  V
    kernel镜像压缩或者不压缩取决于存储kernel的物理介质速度和CPU的性能，应当评估kernel的加载时间和解压时间决定采用哪种方案
7. 所有在启动阶段不需要的功能都编译成内核模块，在启动后加载。所有不需要的功能都需要从内核中移除。 V
    根据经验有一些模块不适合作为模块加载，其中包括：启动早期系统用到的模块，初始化时间较长的部分，...
8. 调整内核驱动的初始化顺序，保证显示驱动，Camera驱动和USB驱动尽早加载 V
9. 取消内核的Calibration routeline，可以用固定数值代替
10. Android Framework 采用Thundersoft的优化方案。 V
11. Launcher先加载的方案，延迟应用加载：调研 V


外部数据存储


## IPC性能

## DSP性能

## 系统应用后台性能

## Flash寿命

## 电源瞬断

# 系统设计
## OOM killer策略

## FailSafe

## watchdog设计

## 外设失效处理

## 应用错误处理


# System Logger

## Log的基本要求

## Log内容

# CAN相关
## CAN性能



## 其他

